apiVersion: v2v.kubevirt.io/v1beta1
kind: VirtualMachineImport
metadata:
  name: vmimport-example
  namespace: default
spec:
  providerCredentialsSecret: # A secret holding the access credentials to the vCenter or ESXi host, see example secret.yaml
    name: my-secret-with-vmware-credentials
    namespace: default # optional, if not specified, use CR's namespace
  resourceMapping:
    name: example # a mapping of VM resources (network, storage)
    namespace: default # optional, if not specified, use CR's namespace
  targetVmName: examplevm # The target name is optional. If not provided, the import will attempt to use the origin name of the VM or to normalize it.
  startVm: true # should the vm be started after the vm was created on kubevirt
  source:
    vmware:
      vm:
        id: 42253ce0-5f76-918d-d85c-d7506f7cc056 # VirtualMachine UUID
        # name: my-vm-name
      mappings: # mapping section overrides mapping rules provided by 'resourceMapping' external mapping resource
        networkMappings:
          - source:
              id: network-7 # Network Managed Object Reference
            target:
              name: pod
            type: pod
        storageMappings:
          - source:
              name: iSCSI_Datastore # Datastore name
            target:
              name: storage_class_1
        diskMappings: # specifies per-disk placement on storage class
          - source:
              id: 421-2000 # VirtualDisk DiskObjectId or vDiskID
            target:
              name: storage_class_2

# The VirtualMachine can be identified either by its UUID, or by its name. Its UUID can be retrieved
# via the vSphere SDK, or from the vCenter Flash client. To find the UUID in the UI, find the Host
# containing the VM you want, choose the VMs tab, and then right click on the columns.
# From the dropdown choose "Show/Hide Columns", and then check the box for "UUID".
